{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","style","color","name","id","getAll","fetch","then","response","ok","Error","status","statusText","json","get5First","sort","a","b","localeCompare","splice","getRedGoods","filter","App","useState","data","setData","loadData","func","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"qPAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAkB,UAAQ,OAAOC,MAAO,CAAEC,MAAOF,EAAKE,OAAtD,SACGF,EAAKG,MADCH,EAAKI,UCLb,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,UAIf,IAAMC,EAAY,WACvB,OAAOT,IACJE,MAAK,SAAAT,GACJ,OAAOA,EAAMiB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEb,KAAKe,cAAcD,EAAEd,SAAOgB,OAAO,EAAG,OAI7DC,EAAc,WACzB,OAAOf,IACJE,MAAK,SAAAT,GAAK,OAAIA,EAAMuB,QAAO,SAAArB,GAAI,MAAmB,QAAfA,EAAKE,aCnBhCoB,EAAgB,WAC3B,MAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAQ,uCAAG,WAAOC,GAAP,SAAAX,EAAA,kEACfS,EADe,SACDE,IADC,6EAAH,sDAId,OACE,sBAAKC,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMJ,EAASrB,IAH1B,4BAQA,wBACEwB,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMJ,EAASZ,IAH1B,gCAQA,wBACEe,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMJ,EAASN,IAH1B,4BAQCI,GAAQ,cAAC,EAAD,CAAW1B,MAAO0B,QCtCjCO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.801e7f2d.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li key={good.id} data-cy=\"good\" style={{ color: good.color }}>\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => {\n      return goods.sort((a, b) => a.name.localeCompare(b.name)).splice(0, 5);\n    });\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'));\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [data, setData] = useState<Good[]>();\n\n  const loadData = async (func: () => Promise<Good[]>) => {\n    setData(await func());\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => loadData(getAll)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => loadData(get5First)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => loadData(getRedGoods)}\n      >\n        Load red goods\n      </button>\n\n      {data && <GoodsList goods={data} />}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}